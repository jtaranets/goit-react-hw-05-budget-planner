{"version":3,"sources":["redux/expenses/expensesActions.js","redux/expenses/expensesReducer.js","redux/budget/budgetActions.js","redux/budget/budgetReducer.js","redux/middlewares/middleware.js","redux/store.js","components/shared/Form.js","components/shared/Label.js","components/shared/Input.js","components/shared/Button.js","components/BudgetForm.js","components/ExpenseForm.js","components/ExpensesTable.js","components/ExpensesTableContainer.js","components/Value.js","components/Values.js","redux/expenses/expensesSelector.js","components/ValuesContainer.js","components/App.js","index.js"],"names":["actionsTypes","expensesReducer","store","type","payload","id","shortid","generate","filter","i","actionTypes","budgetReducer","storeValidation","next","action","tv4","validate","getState","schema","Error","error","rootReducer","combineReducers","expenses","budget","middlewares","enhancer","applyMiddleware","createStore","composeWithDevTools","StyledForm","styled","form","Form","onSubmit","children","StyledLabel","label","props","customStyles","Label","StyledInput","input","Input","value","onChange","name","StyledButton","button","Button","onClick","BudgetForm","state","handleChange","e","setState","target","handleSubmit","preventDefault","onSave","this","Component","connect","dispatch","actions","ExpenseForm","amount","isRequired","Table","table","ExpensesTable","items","onRemove","map","key","Container","div","isPositive","p","Amount","Value","section","Values","balance","getTotalExpenses","reduce","total","expense","parseInt","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.24de2422.chunk.js","sourcesContent":["export const actionsTypes = {\n  ADD_EXPENSE: 'ADD_EXPENSE',\n  REMOVE_EXPENSE: 'REMOVE_EXPENSE',\n};\n\nexport const addExpense = value => ({\n  type: actionsTypes.ADD_EXPENSE,\n  payload: value,\n});\n\nexport const removeExpense = id => ({\n  type: actionsTypes.REMOVE_EXPENSE,\n  payload: id,\n});\n","import shortid from 'shortid';\nimport { actionsTypes } from './expensesActions';\n\nconst expensesReducer = (store = [], { type, payload }) => {\n  switch (type) {\n    case actionsTypes.ADD_EXPENSE:\n      return [...store, { id: shortid.generate(), ...payload }];\n    case actionsTypes.REMOVE_EXPENSE:\n      return store.filter(i => i.id !== payload);\n    default:\n      return store;\n  }\n};\nexport default expensesReducer;\n","export const actionTypes = {\n  ADD_BUDGET: 'ADD_BUDGET',\n};\n\nexport const addBudget = value => ({\n  type: actionTypes.ADD_BUDGET,\n  payload: value,\n});\n","import { actionTypes } from './budgetActions';\n\nconst budgetReducer = (store = '', { type, payload }) => {\n  switch (type) {\n    case actionTypes.ADD_BUDGET:\n      return payload;\n    default:\n      return store;\n  }\n};\n\nexport default budgetReducer;\n","import tv4 from 'tv4';\nimport schema from '../schemas/schema.json';\n\nconst storeValidation = store => next => action => {\n  next(action);\n  const isValid = tv4.validate(store.getState(), schema);\n\n  if (!isValid) {\n    throw new Error(tv4.error);\n  }\n};\n\nexport default storeValidation;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport expensesReducer from './expenses/expensesReducer';\nimport budgetReducer from './budget/budgetReducer';\nimport storeValidation from './middlewares/middleware';\n\nconst rootReducer = combineReducers({\n  expenses: expensesReducer,\n  budget: budgetReducer,\n});\n\nconst middlewares = [storeValidation];\n\nconst enhancer = applyMiddleware(...middlewares);\nconst store = createStore(rootReducer, composeWithDevTools(enhancer));\n\nexport default store;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  padding: 16px;\n  width: 100%;\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nconst Form = ({ onSubmit = () => null, children }) => (\n  <StyledForm onSubmit={onSubmit}>{children}</StyledForm>\n);\n\nForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n\nexport default Form;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst StyledLabel = styled.label`\n  display: inline-block;\n  font-size: 20px;\n  color: #171718;\n  cursor: pointer;\n  ${props => props.customStyles}\n`;\n\nconst Label = ({ children, customStyles }) => (\n  <StyledLabel customStyles={customStyles}>{children}</StyledLabel>\n);\n\nLabel.propTypes = {\n  customStyles: PropTypes.string,\n};\nexport default Label;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst StyledInput = styled.input`\n  color: #171718;\n  font: inherit;\n  font-size: 1.2rem;\n  padding: 16px;\n  border-radius: 4px;\n  border: 1px solid #bdbdbd;\n  width: 100%;\n  outline: 0;\n\n  &:focus {\n    border: 1px solid #2b32b2;\n  }\n`;\n\nconst Input = ({\n  type = ' text',\n  value = '',\n  onChange = () => null,\n  name = '',\n}) => <StyledInput type={type} value={value} onChange={onChange} name={name} />;\n\nInput.propTypes = {\n  type: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  name: PropTypes.string,\n};\n\nexport default Input;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst StyledButton = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  color: #fff;\n  background-color: #3f51b5;\n  border: 0;\n  outline: 0;\n  padding: 8px 24px;\n  border-radius: 4px;\n  cursor: pointer;\n  box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.05);\n  font: inherit;\n  text-transform: uppercase;\n  user-select: none;\n\n  transition: background-color 200ms ease-in-out;\n\n  &:hover {\n    box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.15);\n    background-color: #303f9f;\n  }\n`;\n\nconst Button = ({ type = 'button', label = '', onClick = () => null }) => (\n  <StyledButton type={type} onClick={onClick}>\n    {label}\n  </StyledButton>\n);\n\nButton.propTypes = {\n  type: PropTypes.string,\n  label: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\nexport default Button;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Form from './shared/Form';\nimport Label from './shared/Label';\nimport Input from './shared/Input';\nimport Button from './shared/Button';\nimport * as actions from '../redux/budget/budgetActions';\n\nconst labelStyles = `\n  margin-bottom: 16px;  \n`;\n\nclass BudgetForm extends Component {\n  state = {\n    budget: 0,\n  };\n\n  handleChange = e => {\n    this.setState({\n      budget: e.target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSave(this.state.budget);\n    this.setState({ budget: 0 });\n  };\n\n  render() {\n    const { budget } = this.state;\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Label customStyles={labelStyles}>\n          Enter your total budget\n          <Input type=\"number\" value={budget} onChange={this.handleChange} />\n        </Label>\n\n        <Button label=\"Save\" type=\"submit\" />\n      </Form>\n    );\n  }\n}\n\nBudgetForm.propTypes = {\n  onSave: PropTypes.func,\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onSave: value => dispatch(actions.addBudget(value)),\n});\n\nexport default connect(null, mapDispatchToProps)(BudgetForm);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Form from './shared/Form';\nimport Label from './shared/Label';\nimport Input from './shared/Input';\nimport Button from './shared/Button';\nimport * as actions from '../redux/expenses/expensesActions';\n\nconst labelStyles = `\n  margin-bottom: 16px;  \n`;\n\nclass ExpenseForm extends Component {\n  state = {\n    name: '',\n    amount: 0,\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSave({ ...this.state });\n    this.setState({ name: '', amount: 0 });\n  };\n\n  render() {\n    const { name, amount } = this.state;\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Label customStyles={labelStyles}>\n          Enter expense name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleChange}\n          />\n        </Label>\n        <Label customStyles={labelStyles}>\n          Enter expense amount\n          <Input\n            type=\"number\"\n            name=\"amount\"\n            value={amount}\n            onChange={this.handleChange}\n          />\n        </Label>\n\n        <Button label=\"Add\" type=\"submit\" />\n      </Form>\n    );\n  }\n}\n\nExpenseForm.propTypes = {\n  onSave: PropTypes.func,\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onSave: value => dispatch(actions.addExpense(value).isRequired),\n});\n\nexport default connect(null, mapDispatchToProps)(ExpenseForm);\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport Button from './shared/Button';\n\nconst Table = styled.table`\n  border-collapse: collapse;\n  text-align: center;\n  width: 100%;\n\n  tr {\n    border-bottom: 1px solid #212121;\n  }\n\n  td,\n  th {\n    padding-top: 8px;\n    padding-bottom: 8px;\n  }\n`;\n\nconst ExpensesTable = ({ items = [], onRemove }) => (\n  <Table>\n    <thead>\n      <tr>\n        <th>Expense name</th>\n        <th>Expense amount</th>\n        <th />\n      </tr>\n    </thead>\n    <tbody>\n      {items.map(({ id, name, amount }) => (\n        <tr key={id}>\n          <td>{name}</td>\n          <td>{amount}</td>\n          <td>\n            <Button label=\"Delete\" onClick={() => onRemove(id)} />\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </Table>\n);\n\nExpensesTable.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.object),\n  onRemove: PropTypes.func.isRequired,\n};\nexport default ExpensesTable;\n","import { connect } from 'react-redux';\nimport * as actions from '../redux/expenses/expensesActions';\nimport ExpensesTable from './ExpensesTable';\n\nconst mapStateToProps = state => ({\n  items: state.expenses,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onRemove: id => dispatch(actions.removeExpense(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpensesTable);\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Container = styled.div`\n  text-align: center;\n  padding: 8px 24px;\n  color: ${props => (props.isPositive ? '#388E3C' : '#D32F2F')};\n  user-select: none;\n`;\n\nconst Label = styled.p`\n  margin-top: 0;\n  margin-bottom: 8px;\n  text-transform: uppercase;\n  font-weight: 500;\n  font-size: 24px;\n`;\n\nconst Amount = styled.p`\n  margin-top: 0;\n  margin-bottom: 0;\n  font-size: 48px;\n`;\n\nconst Value = ({ label, value, isPositive }) => (\n  <Container isPositive={isPositive}>\n    <Label>{label}</Label>\n    <Amount>{value}&nbsp;&#x24;</Amount>\n  </Container>\n);\n\nValue.propTypes = {\n  label: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  isPositive: PropTypes.bool,\n};\n\nexport default Value;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport Value from './Value';\n\nconst Container = styled.section`\n  display: inline-flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Values = ({ budget, expenses, balance }) => {\n  return (\n    <Container>\n      <Value label=\"Budget\" value={budget} isPositive />\n      <Value label=\"Expenses\" value={expenses} />\n      <Value label=\"Balance\" value={balance} isPositive={balance >= 0} />\n    </Container>\n  );\n};\n\nValues.propTypes = {\n  budget: PropTypes.string.isRequired,\n  expenses: PropTypes.arrayOf(PropTypes.object).isRequired,\n  balance: PropTypes.number.isRequired,\n};\n\nexport default Values;\n","const getTotalExpenses = state => {\n  return state.expenses.reduce(\n    (total, expense) => (total += parseInt(expense.amount, 10)),\n    0,\n  );\n};\n\nexport default getTotalExpenses;\n","import { connect } from 'react-redux';\nimport Values from './Values';\nimport getTotalExpenses from '../redux/expenses/expensesSelector';\n\nconst mapStateToProps = state => ({\n  budget: state.budget,\n  expenses: getTotalExpenses(state),\n  balance: state.budget - getTotalExpenses(state),\n});\n\nexport default connect(mapStateToProps)(Values);\n","import React from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport BudgetForm from './BudgetForm';\nimport ExpenseForm from './ExpenseForm';\nimport ExpensesTable from './ExpensesTableContainer';\nimport Values from './ValuesContainer';\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: 340px 1fr;\n  align-items: flex-start;\n  grid-gap: 24px;\n  max-width: 960px;\n  padding-left: 16px;\n  padding-right: 16px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst App = ({ expenses }) => (\n  <Container>\n    <BudgetForm />\n    <Values />\n    <ExpenseForm />\n    {expenses.length > 0 && <ExpensesTable />}\n  </Container>\n);\nApp.propTypes = {\n  expenses: PropTypes.arrayOf(PropTypes.object),\n};\nconst mapStateToProps = state => ({\n  expenses: state.expenses,\n});\n\nexport default connect(mapStateToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport App from './components/App';\nimport './styles.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}